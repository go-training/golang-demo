name: AWS ECR With ECR Plugin
on: [push]

permissions:
  id-token: write
  contents: read

env:
  AWS_REGION : ap-northeast-1

jobs:

  build:
    name: upload image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      # - name: Login to Amazon ECR
      #   id: login-ecr
      #   uses: aws-actions/amazon-ecr-login@v1

      # - name: Build, tag, and push docker image to Amazon ECR
      #   env:
      #     REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #     REPOSITORY: ${{ secrets.API_REPO }}
      #     IMAGE_TAG: ${{ github.sha }}
      #   run: |
      #     docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
      #     docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Login to ECR
        uses: docker/login-action@v2
        with:
          registry: ${{ steps.login-ecr.outputs.registry }}

      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      -
        name: Docker meta
        id: docker-meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ${{ steps.login-ecr.outputs.registry }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          platforms: linux/amd64,linux/arm,linux/arm64
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker-meta.outputs.tags }}
          labels: ${{ steps.docker-meta.outputs.labels }}
